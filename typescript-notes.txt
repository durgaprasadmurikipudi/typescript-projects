For compiling typescript you need two modules, a global typescript module and ts-node module to quickly execute ts scripts.
General convention is to ompile the .ts file into js file and then run it via node.
to combine these oepratiosn ts-node is used.
so instead of tsc index.ts && node index.js, we can write ts-node index.ts

Typs in typescript:
Primitive Types: number, boolean, void, undefined, string, symbol, null
Object Types: functions, arrays, classes, objects

type annotations vs type inference
type inference: if declaration and initialization on same line, else any
When type annotations?
  1. when we declare varaible and initialize it it a later point of time or line.
  2. when we assign it a type variable that can't be inferred, probably custom type.
  3. when a function returns as any type and yo uwant to clarify the return value.

Type annotation for function will tell what parameters will the function receive and what value type it will return.
Type inference for a function can only infer max of what value type it will return.

Generally for any node module to work with typescript needs type definitiuon file for it, generally these are provided by 
library maintainer or some random person could create this to help the javascript community and might put it as a package.
The types library is the most famous one and has type definiton file for almost all popular libraries.

When you use a pipe operator what typescript does is, it will allow only common properties and methods that are present on
all the types that were piped to be accessed on the instance created out of it. Else it will throw a error.
